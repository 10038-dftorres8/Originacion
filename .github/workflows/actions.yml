name: Deploy Prestamos Originacion to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  ECR_REGISTRY: 425784381978.dkr.ecr.us-east-2.amazonaws.com
  ECR_REPOSITORY: banquito-prestamos-originacion
  ECS_CLUSTER: banquito-cluster
  ECS_SERVICE: banquito-prestamos-originacion
  CONTAINER_NAME: originacion-container

permissions:
  id-token: write   # Necesario para OIDC
  contents: read    # Necesario para actions/checkout

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven
      run: |
        chmod +x mvnw
        ./mvnw clean package -DskipTests
        ls -la target/

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::425784381978:role/GitHubActions-ECR-ECS-Role
        aws-region: ${{ env.AWS_REGION }}
        role-session-name: GitHubActions-${{ github.run_id }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push Docker image
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Update ECS service
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --force-new-deployment \
          --query "service.taskDefinition" \
          --output text > task-definition.txt
        
        echo "Waiting for deployment to complete..."
        aws ecs wait services-stable \
          --cluster $ECS_CLUSTER \
          --services $ECS_SERVICE